2. O jogo conhecido como Torre de Hanói consiste de três torres chamadas origem,
destino e auxiliar e um conjunto de n discos de diâmetros diferentes, colocados na
torre origem na ordem decrescente dos seus diâmetros. O objetivo do jogo é,
movendo um único disco de cada vez e não podendo colocar um disco sobre outro
de diâmetro menor, transportar todos os discos para torre destino, podendo usar a
torre auxiliar como passagem intermediária dos discos. Escreva algoritmos para
este jogo nos casos n = 2, n = 3 e para qualquer n.
/*
    discos
    1 -> tamanho 1
    2 -> tamanho 2
    ...
    n -> tamanho n

    o = original
    a = auxiliar
    d = destino

*/
torres o, a, d;
discos 1,2,...,n;
==================
n = 2

1 para a
2 para d
1 para d
==================
n = 3

1 para d
2 para a
1 para a
3 para d
1 para o
2 para d
1 para d
=================
qualquer n

#include<stdio.h>
int hanoi(int n, int O,  int D, int T);
void mover(int, int);

int main() {
    // numero de discos
    int n = 0;
    printf("Digite o numero de discos:\n\t");
    scanf("%d", &n);

    // executa o hanoi!
    hanoi(n, 1, 3, 2);
    return 0;
}

// Método que realiza (imprime) o movimento
// de um disco entre dois pinos
void mover(int O, int D){
    printf("%d -> %d\n", O, D);
}
// Método que implementa a recursão
// O = pino origem
// D = pino destino
// T = pino de trabalho
int hanoi(int n, int O,  int D, int T){
    if (n > 0){
        hanoi(n - 1, O, T, D);
        mover(O, D);
        hanoi(n - 1, T, D, O);
    }
}
